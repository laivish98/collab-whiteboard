{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\collab-whiteboard\\\\client\\\\src\\\\components\\\\whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Whiteboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  socketServer = 'http://localhost:5000',\n  width = 900,\n  height = 500\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(3);\n  const socket = useRef(null);\n  useEffect(() => {\n    socket.current = io(socketServer);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = width;\n    canvas.height = height;\n    socket.current.on('draw', ({\n      x,\n      y,\n      color,\n      size\n    }) => {\n      drawCircle(ctx, x, y, color, size);\n    });\n    socket.current.on('clear', () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, [socketServer, width, height]);\n  const drawCircle = (ctx, x, y, color, size) => {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(x, y, size, 0, Math.PI * 2);\n    ctx.fill();\n  };\n  const handleMouseDown = () => setIsDrawing(true);\n  const handleMouseUp = () => setIsDrawing(false);\n  const handleMouseLeave = () => setIsDrawing(false);\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const ctx = canvas.getContext('2d');\n    drawCircle(ctx, x, y, color, brushSize);\n    socket.current.emit('draw', {\n      x,\n      y,\n      color,\n      size: brushSize\n    });\n  };\n  const handleClear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    socket.current.emit('clear');\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileType = file.type;\n    if (fileType.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      alert(`Uploaded file: ${file.name}`);\n      // Optional: store the file for download or display\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFA8 Collaborative Whiteboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Brush Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Brush Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"20\",\n          value: brushSize,\n          onChange: e => setBrushSize(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brush-size\",\n          children: [brushSize, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".png,.jpg,.jpeg,.pdf,.doc,.docx\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: handleClear,\n        children: \"\\uD83E\\uDDF9 Clear Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"whiteboard-canvas\",\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"BzfzQHVeId8ZbrkNlpTkCRvVWGg=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","jsxDEV","_jsxDEV","Whiteboard","socketServer","width","height","_s","canvasRef","isDrawing","setIsDrawing","color","setColor","brushSize","setBrushSize","socket","current","canvas","ctx","getContext","on","x","y","size","drawCircle","clearRect","disconnect","fillStyle","beginPath","arc","Math","PI","fill","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","emit","handleClear","handleFileUpload","file","target","files","fileType","type","startsWith","reader","FileReader","onload","event","img","Image","drawImage","src","result","readAsDataURL","alert","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","min","max","Number","accept","onClick","ref","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/acer/collab-whiteboard/client/src/components/whiteboard.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Whiteboard.css';\n\nconst Whiteboard = ({\n  socketServer = 'http://localhost:5000',\n  width = 900,\n  height = 500,\n}) => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(3);\n\n  const socket = useRef(null);\n\n  useEffect(() => {\n    socket.current = io(socketServer);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    canvas.width = width;\n    canvas.height = height;\n\n    socket.current.on('draw', ({ x, y, color, size }) => {\n      drawCircle(ctx, x, y, color, size);\n    });\n\n    socket.current.on('clear', () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    });\n\n    return () => {\n      socket.current.disconnect();\n    };\n  }, [socketServer, width, height]);\n\n  const drawCircle = (ctx, x, y, color, size) => {\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(x, y, size, 0, Math.PI * 2);\n    ctx.fill();\n  };\n\n  const handleMouseDown = () => setIsDrawing(true);\n  const handleMouseUp = () => setIsDrawing(false);\n  const handleMouseLeave = () => setIsDrawing(false);\n\n  const handleMouseMove = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const ctx = canvas.getContext('2d');\n    drawCircle(ctx, x, y, color, brushSize);\n    socket.current.emit('draw', { x, y, color, size: brushSize });\n  };\n\n  const handleClear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    socket.current.emit('clear');\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const fileType = file.type;\n\n    if (fileType.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      alert(`Uploaded file: ${file.name}`);\n      // Optional: store the file for download or display\n    }\n  };\n\n  return (\n    <div className=\"whiteboard-container\">\n      <h2>ðŸŽ¨ Collaborative Whiteboard</h2>\n\n      <div className=\"controls\">\n        <label>\n          Brush Color:\n          <input\n            type=\"color\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Brush Size:\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"20\"\n            value={brushSize}\n            onChange={(e) => setBrushSize(Number(e.target.value))}\n          />\n          <span className=\"brush-size\">{brushSize}px</span>\n        </label>\n\n        <label>\n          Upload File:\n          <input\n            type=\"file\"\n            accept=\".png,.jpg,.jpeg,.pdf,.doc,.docx\"\n            onChange={handleFileUpload}\n          />\n        </label>\n\n        <button className=\"clear-btn\" onClick={handleClear}>\n          ðŸ§¹ Clear Board\n        </button>\n      </div>\n\n      <canvas\n        ref={canvasRef}\n        className=\"whiteboard-canvas\"\n        onMouseDown={handleMouseDown}\n        onMouseUp={handleMouseUp}\n        onMouseMove={handleMouseMove}\n        onMouseLeave={handleMouseLeave}\n      />\n    </div>\n  );\n};\n\nexport default Whiteboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}