{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\collab-whiteboard\\\\client\\\\src\\\\components\\\\whiteboard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Whiteboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  socketServer = process.env.REACT_APP_SOCKET_SERVER\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(3);\n  const [username, setUsername] = useState('');\n  const [lastUpdatedBy, setLastUpdatedBy] = useState('');\n  const [mode, setMode] = useState('draw'); // draw | text\n  const [fontSize, setFontSize] = useState(16);\n  const undoStack = useRef([]);\n  const redoStack = useRef([]);\n  const socket = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n    const ctx = canvas.getContext('2d');\n    socket.current = io(socketServer);\n    socket.current.on('user-assigned', name => {\n      setUsername(name);\n    });\n    socket.current.on('draw', ({\n      x,\n      y,\n      color,\n      size,\n      username\n    }) => {\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = size;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.stroke();\n      setLastUpdatedBy(username);\n    });\n    socket.current.on('clear', () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    });\n    socket.current.on('place-text', ({\n      x,\n      y,\n      text,\n      color,\n      fontSize,\n      username\n    }) => {\n      ctx.font = `${fontSize}px Arial`;\n      ctx.fillStyle = color;\n      ctx.fillText(text, x, y);\n      setLastUpdatedBy(username);\n    });\n    return () => socket.current.disconnect();\n  }, [socketServer]);\n  const saveState = () => {\n    const canvas = canvasRef.current;\n    undoStack.current.push(canvas.toDataURL());\n    if (undoStack.current.length > 50) undoStack.current.shift();\n    redoStack.current = [];\n  };\n  const restoreState = dataURL => {\n    const img = new Image();\n    img.onload = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n    };\n    img.src = dataURL;\n  };\n  const handleUndo = () => {\n    if (undoStack.current.length === 0) return;\n    const canvas = canvasRef.current;\n    redoStack.current.push(canvas.toDataURL());\n    const prevState = undoStack.current.pop();\n    restoreState(prevState);\n  };\n  const handleRedo = () => {\n    if (redoStack.current.length === 0) return;\n    const nextState = redoStack.current.pop();\n    undoStack.current.push(canvasRef.current.toDataURL());\n    restoreState(nextState);\n  };\n  const startDrawing = e => {\n    if (mode !== 'draw') return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    ctx.beginPath();\n    ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n    setIsDrawing(true);\n    saveState();\n  };\n  const draw = e => {\n    if (!isDrawing || mode !== 'draw') return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    ctx.lineTo(x, y);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = brushSize;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.stroke();\n    socket.current.emit('draw', {\n      x,\n      y,\n      color,\n      size: brushSize,\n      username\n    });\n  };\n  const stopDrawing = () => setIsDrawing(false);\n  const handleCanvasClick = e => {\n    if (mode !== 'text') return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const input = prompt('Enter text:');\n    if (!input) return;\n    ctx.font = `${fontSize}px Arial`;\n    ctx.fillStyle = color;\n    ctx.fillText(input, x, y);\n    saveState();\n    socket.current.emit('place-text', {\n      x,\n      y,\n      text: input,\n      color,\n      fontSize,\n      username\n    });\n  };\n  const handleClear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    socket.current.emit('clear');\n    saveState();\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const fileType = file.type;\n    if (fileType.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          saveState();\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      const fileURL = URL.createObjectURL(file);\n      const link = document.createElement('a');\n      link.href = fileURL;\n      link.download = file.name;\n      if (fileType === 'application/pdf') {\n        window.open(fileURL, '_blank');\n      } else {\n        link.click();\n      }\n      alert(`File \"${file.name}\" is ready for download or preview.`);\n    }\n  };\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    const link = document.createElement('a');\n    link.download = 'whiteboard_snapshot.png';\n    link.href = canvas.toDataURL('image/png');\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFA8 Collaborative Whiteboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"username-display\",\n      children: [\"\\uD83D\\uDC64 You are \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"last-updated\",\n      children: [\"\\uD83D\\uDD8C\\uFE0F Last updated by: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: lastUpdatedBy || 'Waiting...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 56\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Mode:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mode,\n          onChange: e => setMode(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"draw\",\n            children: \"Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Color:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color,\n          onChange: e => setColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), mode === 'draw' ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Brush Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"20\",\n          value: brushSize,\n          onChange: e => setBrushSize(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"brush-size\",\n          children: [brushSize, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Font Size:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"8\",\n          max: \"48\",\n          value: fontSize,\n          onChange: e => setFontSize(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".png,.jpg,.jpeg,.pdf,.doc,.docx\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        children: \"\\uD83E\\uDDF9 Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"\\uD83D\\uDCBE Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"\\u21A9\\uFE0F Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRedo,\n        children: \"\\u21AA\\uFE0F Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"whiteboard-canvas\",\n      onMouseDown: startDrawing,\n      onMouseUp: stopDrawing,\n      onMouseMove: draw,\n      onClick: handleCanvasClick,\n      onMouseLeave: stopDrawing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"4PryWIXb+AuVqEqIsD6vLt25GBU=\");\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useRef","useEffect","useState","io","jsxDEV","_jsxDEV","Whiteboard","socketServer","process","env","REACT_APP_SOCKET_SERVER","_s","canvasRef","isDrawing","setIsDrawing","color","setColor","brushSize","setBrushSize","username","setUsername","lastUpdatedBy","setLastUpdatedBy","mode","setMode","fontSize","setFontSize","undoStack","redoStack","socket","canvas","current","width","offsetWidth","height","offsetHeight","ctx","getContext","on","name","x","y","size","lineTo","strokeStyle","lineWidth","lineCap","lineJoin","stroke","clearRect","text","font","fillStyle","fillText","disconnect","saveState","push","toDataURL","length","shift","restoreState","dataURL","img","Image","onload","drawImage","src","handleUndo","prevState","pop","handleRedo","nextState","startDrawing","e","rect","getBoundingClientRect","beginPath","moveTo","clientX","left","clientY","top","draw","emit","stopDrawing","handleCanvasClick","input","prompt","handleClear","handleFileUpload","file","target","files","fileType","type","startsWith","reader","FileReader","event","result","readAsDataURL","fileURL","URL","createObjectURL","link","document","createElement","href","download","window","open","click","alert","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","min","max","Number","accept","onClick","ref","onMouseDown","onMouseUp","onMouseMove","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/acer/collab-whiteboard/client/src/components/whiteboard.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport './Whiteboard.css';\n\nconst Whiteboard = ({ socketServer = process.env.REACT_APP_SOCKET_SERVER }) => {\n\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [brushSize, setBrushSize] = useState(3);\n  const [username, setUsername] = useState('');\n  const [lastUpdatedBy, setLastUpdatedBy] = useState('');\n  const [mode, setMode] = useState('draw'); // draw | text\n  const [fontSize, setFontSize] = useState(16);\n\n  const undoStack = useRef([]);\n  const redoStack = useRef([]);\n  const socket = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n\n    const ctx = canvas.getContext('2d');\n\n    socket.current = io(socketServer);\n\n    socket.current.on('user-assigned', (name) => {\n      setUsername(name);\n    });\n\n    socket.current.on('draw', ({ x, y, color, size, username }) => {\n      ctx.lineTo(x, y);\n      ctx.strokeStyle = color;\n      ctx.lineWidth = size;\n      ctx.lineCap = 'round';\n      ctx.lineJoin = 'round';\n      ctx.stroke();\n      setLastUpdatedBy(username);\n    });\n\n    socket.current.on('clear', () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    });\n\n    socket.current.on('place-text', ({ x, y, text, color, fontSize, username }) => {\n      ctx.font = `${fontSize}px Arial`;\n      ctx.fillStyle = color;\n      ctx.fillText(text, x, y);\n      setLastUpdatedBy(username);\n    });\n\n    return () => socket.current.disconnect();\n  }, [socketServer]);\n\n  const saveState = () => {\n    const canvas = canvasRef.current;\n    undoStack.current.push(canvas.toDataURL());\n    if (undoStack.current.length > 50) undoStack.current.shift();\n    redoStack.current = [];\n  };\n\n  const restoreState = (dataURL) => {\n    const img = new Image();\n    img.onload = () => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(img, 0, 0);\n    };\n    img.src = dataURL;\n  };\n\n  const handleUndo = () => {\n    if (undoStack.current.length === 0) return;\n    const canvas = canvasRef.current;\n    redoStack.current.push(canvas.toDataURL());\n    const prevState = undoStack.current.pop();\n    restoreState(prevState);\n  };\n\n  const handleRedo = () => {\n    if (redoStack.current.length === 0) return;\n    const nextState = redoStack.current.pop();\n    undoStack.current.push(canvasRef.current.toDataURL());\n    restoreState(nextState);\n  };\n\n  const startDrawing = (e) => {\n    if (mode !== 'draw') return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n    ctx.beginPath();\n    ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top);\n    setIsDrawing(true);\n    saveState();\n  };\n\n  const draw = (e) => {\n    if (!isDrawing || mode !== 'draw') return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    ctx.lineTo(x, y);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = brushSize;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.stroke();\n\n    socket.current.emit('draw', { x, y, color, size: brushSize, username });\n  };\n\n  const stopDrawing = () => setIsDrawing(false);\n\n  const handleCanvasClick = (e) => {\n    if (mode !== 'text') return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect();\n\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    const input = prompt('Enter text:');\n    if (!input) return;\n\n    ctx.font = `${fontSize}px Arial`;\n    ctx.fillStyle = color;\n    ctx.fillText(input, x, y);\n\n    saveState();\n\n    socket.current.emit('place-text', {\n      x,\n      y,\n      text: input,\n      color,\n      fontSize,\n      username\n    });\n  };\n\n  const handleClear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    socket.current.emit('clear');\n    saveState();\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const fileType = file.type;\n\n    if (fileType.startsWith('image/')) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = canvasRef.current;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n          saveState();\n        };\n        img.src = event.target.result;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      const fileURL = URL.createObjectURL(file);\n      const link = document.createElement('a');\n      link.href = fileURL;\n      link.download = file.name;\n\n      if (fileType === 'application/pdf') {\n        window.open(fileURL, '_blank');\n      } else {\n        link.click();\n      }\n\n      alert(`File \"${file.name}\" is ready for download or preview.`);\n    }\n  };\n\n  const handleSave = () => {\n    const canvas = canvasRef.current;\n    const link = document.createElement('a');\n    link.download = 'whiteboard_snapshot.png';\n    link.href = canvas.toDataURL('image/png');\n    link.click();\n  };\n\n  return (\n    <div className=\"whiteboard-container\">\n      <h2>🎨 Collaborative Whiteboard</h2>\n      <p className=\"username-display\">👤 You are <strong>{username}</strong></p>\n      <p className=\"last-updated\">🖌️ Last updated by: <strong>{lastUpdatedBy || 'Waiting...'}</strong></p>\n\n      <div className=\"controls\">\n        <label>\n          Mode:\n          <select value={mode} onChange={(e) => setMode(e.target.value)}>\n            <option value=\"draw\">Draw</option>\n            <option value=\"text\">Text</option>\n          </select>\n        </label>\n\n        <label>\n          Color:\n          <input\n            type=\"color\"\n            value={color}\n            onChange={(e) => setColor(e.target.value)}\n          />\n        </label>\n\n        {mode === 'draw' ? (\n          <label>\n            Brush Size:\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"20\"\n              value={brushSize}\n              onChange={(e) => setBrushSize(Number(e.target.value))}\n            />\n            <span className=\"brush-size\">{brushSize}px</span>\n          </label>\n        ) : (\n          <label>\n            Font Size:\n            <input\n              type=\"number\"\n              min=\"8\"\n              max=\"48\"\n              value={fontSize}\n              onChange={(e) => setFontSize(Number(e.target.value))}\n            />\n          </label>\n        )}\n\n        <label>\n          Upload File:\n          <input\n            type=\"file\"\n            accept=\".png,.jpg,.jpeg,.pdf,.doc,.docx\"\n            onChange={handleFileUpload}\n          />\n        </label>\n\n        <button onClick={handleClear}>🧹 Clear</button>\n        <button onClick={handleSave}>💾 Save</button>\n        <button onClick={handleUndo}>↩️ Undo</button>\n        <button onClick={handleRedo}>↪️ Redo</button>\n      </div>\n\n      <canvas\n        ref={canvasRef}\n        className=\"whiteboard-canvas\"\n        onMouseDown={startDrawing}\n        onMouseUp={stopDrawing}\n        onMouseMove={draw}\n        onClick={handleCanvasClick}\n        onMouseLeave={stopDrawing}\n      />\n    </div>\n  );\n};\n\nexport default Whiteboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}